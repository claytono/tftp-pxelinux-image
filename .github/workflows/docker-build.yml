name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image locally
        run: docker compose build

      - name: Start TFTP server and wait for healthy
        run: docker compose up -d --wait

      - name: Show container logs
        run: docker compose logs

      - name: Install TFTP client
        run: sudo apt-get update && sudo apt-get install -y tftp-hpa

      - name: Test TFTP retrieval of pxelinux.cfg/default
        run: |
          mkdir -p test-download
          cd test-download
          tftp localhost <<EOF
          get pxelinux.cfg/default
          quit
          EOF

      - name: Verify file was downloaded
        run: |
          if [ ! -f test-download/default ]; then
            echo "ERROR: File was not downloaded"
            exit 1
          fi
          echo "SUCCESS: File downloaded successfully"
          cat test-download/default

      - name: Show container logs after test
        if: always()
        run: docker compose logs

      - name: Shutdown TFTP server
        if: always()
        run: docker compose down
